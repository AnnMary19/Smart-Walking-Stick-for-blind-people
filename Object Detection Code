#include <DFRobotDFPlayerMini.h>
#include <SoftwareSerial.h>
// Define pin connections for ultrasonic sensors
#define trigPin1 6
#define echoPin1 7
#define trigPin2 8
#define echoPin2 9
#define trigPin3 10
#define echoPin3 11
// Define new pin connections for DFPlayer Mini
#define DFPlayer_RX 5 // Connect to TX of DFPlayer
#define DFPlayer_TX 4 // Connect to RX of DFPlayer
// Create SoftwareSerial object for DFPlayer Mini communication
SoftwareSerial myDFPlayerSerial(DFPlayer_RX, DFPlayer_TX); // RX, TX
DFRobotDFPlayerMini myDFPlayer;
const int buzzerPin = 12; // Pin connected to the buzzer
const int waterPin = 3;  // Pin connected to water detection (analog input)
const int ledPin = 13;     // Pin connected to LED
const int hapticPin = 2;  // Pin connected to haptic motor
long duration1, duration2, duration3;
int cm1, cm2, cm3;
void setup() {
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  pinMode(trigPin3, OUTPUT);
  pinMode(echoPin3, INPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(waterPin, INPUT_PULLUP);
  pinMode(ledPin, OUTPUT);
  pinMode(hapticPin, OUTPUT);
 myDFPlayerSerial.begin(9600);
  Serial.begin(9600);
 if (!myDFPlayer.begin(myDFPlayerSerial)) {
    Serial.println("Unable to begin:");
    Serial.println("1.Please recheck the connection!");
    Serial.println("2.Please insert the SD card!");
    while (true);               }
  myDFPlayer.volume(27); // Set volume value (0~30).
  myDFPlayer.play(1);    }
void loop() {
  // --- Sensor 1 (100cm range) ---
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  duration1 = pulseIn(echoPin1, HIGH);
  cm1 = duration1 * 0.034 / 2;  // Convert pulse duration to distance in cm
  delay(100);
 // --- Sensor 2 (100cm range) ---
  digitalWrite(trigPin2, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin2, LOW);
  duration2 = pulseIn(echoPin2, HIGH);
  cm2 = duration2 * 0.034 / 2;
  delay(100);
// --- Sensor 3 (50cm range) ---
  digitalWrite(trigPin3, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin3, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin3, LOW);
  duration3 = pulseIn(echoPin3, HIGH);
  cm3 = duration3 * 0.034 / 2;
  delay(100);
 // Check for obstacle detection within 100cm range
  if (cm1 <= 100) {
    if (cm1 > 70){
      //Buzzer will alarm range in between 100 and 70 cm range with much delay
    tone(buzzerPin, 1000); // Sound the buzzer at 1 kHz
    delay(400);
    }else if (cm1 >30){
      //Buzzer will alarm range in between 100 and 70 cm range with small delay
    tone(buzzerPin, 1000); // Sound the buzzer at 1 kHz
    delay(200);
    }else{
    tone(buzzerPin, 1000); // Sound the buzzer continously at 1 kHz
    }
    digitalWrite(ledPin, HIGH);
    digitalWrite(hapticPin, HIGH);
  } else {
    noTone(buzzerPin); // Stop the buzzer
    digitalWrite(ledPin, LOW);
    digitalWrite(hapticPin, LOW);
  }
  if (cm2 <= 10){
     myDFPlayer.play(5); // Play the second(elevated suface detected) MP3 file 
    digitalWrite(ledPin, HIGH);
    digitalWrite(hapticPin, HIGH); } 
else {
    digitalWrite(ledPin, LOW);
    digitalWrite(hapticPin, LOW);
  }
 // Check for pit detection
  if (cm3 <= 50) {
    myDFPlayer.play(4); // Play the third(pit detected) MP3 file 
    digitalWrite(ledPin, HIGH);
    digitalWrite(hapticPin, HIGH);
  } else {
    digitalWrite(ledPin, LOW);
    digitalWrite(hapticPin, LOW);  }
 // Check for water detection
if (digitalRead(waterPin) == LOW) { 
  myDFPlayer.play(3); // Play the fourth (water detected) MP3 file 
  digitalWrite(ledPin, HIGH);
  digitalWrite(hapticPin, HIGH);   } else {
  digitalWrite(ledPin, LOW);
  digitalWrite(hapticPin, LOW);  }
// Delay between readings
  delay(100);  }






